blueprint:
  name: Pico Fan Simple 5-Button with Long Press
  description: >
    # üéõÔ∏è Lutron Pico Fan & Light Control
    
    **Version: 1.0**
    
    Control ceiling fans and optional lights with a Lutron Pico 5-button remote.
    
    <details>
    <summary><b>Features:</b> - Click here to expand</summary>


      - Single press for fan speed control
      - Long press for continuous light dimming
      - Middle button toggles light or fan
      - Configurable brightness steps and dimming rate
      - Smart speed cycling with up/down buttons
      - Works with any Home Assistant fan entity

    </details>
    
    <details>
    <summary><b>Button Layout:</b> - Click here to expand</summary>


      **Single Press Actions:**
      - ON: Turn fan on
      - UP: Increase fan speed
      - MIDDLE: Toggle light (or fan if no light)
      - DOWN: Decrease fan speed
      - OFF: Turn fan off
      
      **Long Press Actions (300ms+ hold):**
      - UP: Brighten light continuously
      - DOWN: Dim light continuously

    </details>
    
    <details>
    <summary><b>Setup Help:</b> - Click here to expand</summary>


      **Prerequisites:**
      1. Lutron Caseta integration installed and configured
      2. Pico remote (PJ2-3BRL-GXX-F01) paired with Caseta hub
      3. Fan entity available in Home Assistant
      4. Optional: Light entity for dimming control
      
      **Configuration Tips:**
      - Brightness Step: Lower values = smoother dimming (default: 10%)
      - Dimming Rate: Lower values = faster dimming (default: 200ms)
      - Long press threshold is 300ms (not configurable)
      
      **Example Dashboard Card:**
      ```yaml
      type: vertical-stack
      cards:
        - type: tile
          entity: fan.bedroom_fan
          features:
            - type: fan-speed
        - type: light
          entity: light.bedroom_fan_light
      ```

    </details>
  domain: automation
  author: billchurch
  source_url: https://community.home-assistant.io/t/pico-fan-simple-5-button-remote-for-lutron-caseta-haiku-or-any-fan/901507
  input:
    pico_remote:
      name: Lutron Pico
      selector:
        device:
          model: PJ2-3BRL-GXX-F01 (Pico3ButtonRaiseLower)
    fan_entity:
      name: Fan
      selector:
        entity:
          domain: fan
    light_entity:
      name: Light (optional)
      default: []
      selector:
        entity:
          domain: light
          multiple: false
    brightness_step:
      name: Brightness Step Percentage
      description: How much to change brightness on each step during long press
      default: 10
      selector:
        number:
          min: 1
          max: 25
          unit_of_measurement: "%"
    dimming_rate:
      name: Dimming Rate (ms)
      description: How fast to change brightness during long press
      default: 200
      selector:
        number:
          min: 100
          max: 1000
          unit_of_measurement: "ms"

trigger:
  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'on'
    id: 'on'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: raise
    id: 'up'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: stop
    id: 'middle'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: lower
    id: 'down'

  - platform: device
    device_id: !input pico_remote
    domain: lutron_caseta
    type: press
    subtype: 'off'
    id: 'off'

variables:
  fan: !input fan_entity
  light: !input light_entity
  step_pct: !input brightness_step
  rate_ms: !input dimming_rate

action:
  - choose:
    ################################################
    # ON BUTTON ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    ################################################
    - conditions:
        - condition: trigger
          id: 'on'
      sequence:
        - service: fan.turn_on
          target:
            entity_id: !input fan_entity

    ################################################
    # RAISE (Up) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    ################################################
    - conditions: "{{ trigger.id == 'up' }}"
      sequence:
        # If a light is defined we need to know whether this
        # was a *tap* or a *hold*.  Wait briefly for a release.
        - wait_for_trigger:
            - platform: device
              device_id: !input pico_remote
              domain: lutron_caseta
              type: release
              subtype: raise
          timeout: "00:00:00.3"      # 300ms long-press threshold
          continue_on_timeout: true

        # SHORT PRESS ‚Üí bump fan speed
        - if: "{{ wait.trigger is not none or light|length == 0 }}"
          then:
            - service: fan.increase_speed
              target: { entity_id: "{{ fan }}" }

        # LONG PRESS ‚Üí brighten light continuously
          else:
            - repeat:
                sequence:
                  - service: light.turn_on
                    target: { entity_id: "{{ light }}" }
                    data:
                      brightness_step_pct: "{{ step_pct }}"
                      transition: "{{ rate_ms/1000 }}"
                  - delay:
                      milliseconds: "{{ rate_ms | int }}"
                until:
                  # Stop when light reaches maximum brightness
                  - condition: template
                    value_template: >
                      {{ (state_attr(light, 'brightness')|default(255)) | int >= 250 }}

    ################################################
    # MIDDLE BUTTON ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    ################################################
    - conditions:
        - condition: trigger
          id: 'middle'
      sequence:
        - variables:
            light: !input light_entity
        - choose:
            - conditions: "{{ light | length > 0 }}"
              sequence:
                - service: light.toggle
                  target: { entity_id: "{{ light }}" }
          default:
            - service: fan.toggle
              target: { entity_id: !input fan_entity }

    ################################################
    # LOWER (Down) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    ################################################
    - conditions: "{{ trigger.id == 'down' }}"
      sequence:
        - wait_for_trigger:
            - platform: device
              device_id: !input pico_remote
              domain: lutron_caseta
              type: release
              subtype: lower
          timeout: "00:00:00.3"      # 300ms long-press threshold
          continue_on_timeout: true

        # SHORT PRESS ‚Üí slower fan
        - if: "{{ wait.trigger is not none or light|length == 0 }}"
          then:
            - service: fan.decrease_speed
              target: { entity_id: "{{ fan }}" }

        # LONG PRESS ‚Üí dim light continuously
          else:
            - repeat:
                sequence:
                  - service: light.turn_on
                    target: { entity_id: "{{ light }}" }
                    data:
                      brightness_step_pct: "{{ 0 - step_pct }}"
                      transition: "{{ rate_ms/1000 }}"
                  - delay:
                      milliseconds: "{{ rate_ms | int }}"
                until:
                  # Stop when light reaches minimum brightness
                  - condition: template
                    value_template: >
                      {{ (state_attr(light, 'brightness')|default(0)) | int < 5 }}

    ################################################
    # OFF BUTTON ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    ################################################
    - conditions:
        - condition: trigger
          id: 'off'
      sequence:
        - service: fan.turn_off
          target:
            entity_id: !input fan_entity

mode: restart   # ensures a release event aborts the running loop
